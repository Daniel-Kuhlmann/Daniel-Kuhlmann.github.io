blogdown::serve_site()
blogdown::serve_site()
## Preliminaries
rm(list=ls())
## This function will check if a package is installed, and if not, install it
pkgTest <- function(x) {
if (!require(x, character.only = TRUE))
{
install.packages(x, dep = TRUE)
if(!require(x, character.only = TRUE)) stop("Package not found")
}
}
dir <- "//iastate.edu/lss/research/dok-lab/Section 502/data"
## These lines load the required packages
packages <- c("readxl",
"data.table",
"janitor",
"tidyverse",
"lubridate",
"stringr",
"purrr",
"tidycensus",
"sf",
"leaflet",
"knitr",
"nngeo",
"extrafont",
"skimr",
"scales",
"lme4",
"mapview",
"pryr",
"tidylog",
"margins",
"ggmap",
"furrr",
"tigris")
lapply(packages, pkgTest)
mn <- places("mn")
rm(mn)
mn_tract <- tracts("mn")
mn_place <- places("mn")
## These lines load the required packages
packages <- c("readxl",
"data.table",
"janitor",
"tidyverse",
"lubridate",
"stringr",
"purrr",
"tidycensus",
"sf",
"leaflet",
"knitr",
"nngeo",
"extrafont",
"skimr",
"scales",
"lme4",
"mapview",
"pryr",
"tidylog",
"margins",
"ggmap",
"furrr",
"tigris",
"mapview")
lapply(packages, pkgTest)
mapview(mn_place)
mn_place %>%
leaflet() %>%
addTiles() %>%
addPolygons()
mn_tract <- mn_tract %>%
mutate(tract_area = st_area(set_units(value = acre)))
## These lines load the required packages
packages <- c("readxl",
"data.table",
"janitor",
"tidyverse",
"lubridate",
"stringr",
"purrr",
"tidycensus",
"sf",
"leaflet",
"knitr",
"nngeo",
"extrafont",
"skimr",
"scales",
"lme4",
"mapview",
"pryr",
"tidylog",
"margins",
"ggmap",
"furrr",
"tigris",
"mapview",
"units")
lapply(packages, pkgTest)
mn_tract <- mn_tract %>%
mutate(tract_area = st_area(set_units(value = acre)))
mn_tract <- mn_tract %>%
mutate(tract_area = st_area(set_units(value = "acre")))
mn_tract <- mn_tract %>%
mutate(tract_area = st_area(set_units(value = "acre")))
mn_tract <- mn_tract %>%
set_units("acre") %>%
mutate(tract_area = st_area())
mn_tract <- mn_tract %>%
mutate(tract_area = st_area(as_units("acres")))
mn_tract <- mn_tract %>%
mutate(tract_area = st_area())
mn_tract <- mn_tract %>%
mutate(tract_area = st_area(.))
mn_tract <- mn_tract %>%
st_as_sf() %>%
mutate(tract_area = st_area(.))
View(mn_tract)
mn_tract <- mn_tract %>%
st_as_sf() %>%
mutate(tract_area = st_area(as_units("acre")))
mn_tract <- mn_tract %>%
st_as_sf() %>%
mutate(tract_area = st_area(., as_units("acre")))
View(mn_tract)
mn_tract %>%
head()
mn_tract <- mn_tract %>%
st_as_sf() %>%
mutate(tract_area = st_area(., set_units("acre")))
mn_tract <- mn_tract %>%
st_as_sf() %>%
mutate(tract_area = st_area()) %>%
set_units("acre")
mn_tract <- mn_tract %>%
st_as_sf() %>%
mutate(tract_area = st_area(.)) %>%
set_units("acre")
mn_place <- places("mn") %>%
st_as_sf()
mn_tract <- tracts("mn") %>%
st_as_sf()
mn_tract <- tracts("mn") %>%
st_as_sf() %>%
mutate(tract_area = st_area(.))
clipped <- mn_tract %>%
st_join(mn_place)
clipped <- mn_place %>%
st_join(mn_tract) %>%
mutate(joined_area = st_area(.))
View(clipped)
head(clipped)
clipped <- mn_place %>%
st_join(mn_tract) %>%
mutate(joined_area = st_area(.)) %>%
st_drop_geometry()
View(clipped)
clipped <- mn_tract %>%
st_join(mn_place) %>%
mutate(joined_area = st_area(.)) %>%
st_drop_geometry()
View(clipped)
test <- clipped %>%
select(GEOID.x, NAME.y, tract_area, joined_area)
View(test)
clipped <- mn_tract %>%
st_intersection(mn_place) %>%
mutate(joined_area = st_area(.)) %>%
st_drop_geometry()
test <- clipped %>%
select(GEOID.x, NAME.y, tract_area, joined_area)
View(clipped)
test <- clipped %>%
select(GEOID, NAME.1, tract_area, joined_area)
View(test)
source('~/.active-rstudio-document', echo=TRUE)
clipped <- mn_tract %>%
st_intersection(mn_place) %>%
mutate(joined_area = st_area(.)) %>%
st_drop_geometry() %>%
mutate(pct_area = joined_area / tract_area) %>%
filter(pct_area > .00001)
View(clipped)
clipped <- mn_tract %>%
st_intersection(mn_place) %>%
mutate(joined_area = st_area(.)) %>%
st_drop_geometry() %>%
mutate(pct_area = joined_area / tract_area) %>%
filter(pct_area > .00001) %>%
rename(GEOID_TRACT = GEOID,
GEOID_PLACE = GEOID.1,
PLACENAME = NAME.1) %>%
select(GEOID_TRACT, GEOID_PLACE, PLACENAME, pct_area)
clipped <- mn_tract %>%
st_intersection(mn_place) %>%
mutate(joined_area = st_area(.)) %>%
st_drop_geometry() %>%
mutate(pct_area = joined_area / tract_area) %>%
drop_units() %>%
filter(pct_area > .00001) %>%
rename(GEOID_TRACT = GEOID,
GEOID_PLACE = GEOID.1,
PLACENAME = NAME.1) %>%
select(GEOID_TRACT, GEOID_PLACE, PLACENAME, pct_area)
View(clipped)
upsai <- read.csv("C:/Users/dok/Desktop/UPSAI_050820.csv")
View(upsai)
upsai <- read.csv("C:/Users/dok/Desktop/UPSAI_050820.csv") %>%
rename(GEOID_TRACT = GEOID)
temp <- clipped %>%
left_join(upsai, by = "GEOID_TRACT")
upsai <- read.csv("C:/Users/dok/Desktop/UPSAI_050820.csv") %>%
rename(GEOID_TRACT = GEOID) %>%
mutate(GEOID_TRACT = as.character(GEOID_TRACT))
temp <- clipped %>%
left_join(upsai, by = "GEOID_TRACT")
View(temp)
temp <- clipped %>%
left_join(upsai, by = "GEOID_TRACT") %>%
mutate(urban = (ACS17_Occupied_Housing_Units_Est * USAI_urban * pct_area))
temp <- clipped %>%
left_join(upsai, by = "GEOID_TRACT") %>%
mutate(urban = (ACS17_Occupied_Housing_Units_Est * UPSAI_urban * pct_area))
View(upsai)
View(temp)
temp <- clipped %>%
left_join(upsai, by = "GEOID_TRACT") %>%
mutate(urban = round((ACS17_Occupied_Housing_Units_Est * UPSAI_urban * pct_area), 1))
View(clipped)
View(temp)
temp <- clipped %>%
left_join(upsai, by = "GEOID_TRACT") %>%
mutate(urban = round((ACS17_Occupied_Housing_Units_Est * UPSAI_urban * pct_area), 0))
.0692 * 765 * .002841382
clipped <- mn_tract %>%
st_intersection(mn_place) %>%
mutate(joined_area = st_area(.)) %>%
st_drop_geometry() %>%
mutate(pct_area = joined_area / tract_area) %>%
drop_units() %>%
muate(pct_area = round(pct_area, 5)) %>%
filter(pct_area > .00001) %>%
rename(GEOID_TRACT = GEOID,
GEOID_PLACE = GEOID.1,
PLACENAME = NAME.1) %>%
select(GEOID_TRACT, GEOID_PLACE, PLACENAME, pct_area)
clipped <- mn_tract %>%
st_intersection(mn_place) %>%
mutate(joined_area = st_area(.)) %>%
st_drop_geometry() %>%
mutate(pct_area = joined_area / tract_area) %>%
drop_units() %>%
mutate(pct_area = round(pct_area, 5)) %>%
filter(pct_area > .00001) %>%
rename(GEOID_TRACT = GEOID,
GEOID_PLACE = GEOID.1,
PLACENAME = NAME.1) %>%
select(GEOID_TRACT, GEOID_PLACE, PLACENAME, pct_area)
upsai <- read.csv("C:/Users/dok/Desktop/UPSAI_050820.csv") %>%
rename(GEOID_TRACT = GEOID) %>%
mutate(GEOID_TRACT = as.character(GEOID_TRACT))
temp <- clipped %>%
left_join(upsai, by = "GEOID_TRACT") %>%
mutate(urban = round((ACS17_Occupied_Housing_Units_Est * UPSAI_urban * pct_area), 0))
View(clipped)
View(temp)
temp <- clipped %>%
left_join(upsai, by = "GEOID_TRACT") %>%
mutate(urban = round((ACS17_Occupied_Housing_Units_Est * UPSAI_urban * pct_area), 0),
suburban = round((ACS17_Occupied_Housing_Units_Est * UPSAI_suburban * pct_area), 0),
rural = round((ACS17_Occupied_Housing_Units_Est * UPSAI_rural * pct_area), 0))
View(temp)
temp <- clipped %>%
left_join(upsai, by = "GEOID_TRACT") %>%
mutate(urban = round((ACS17_Occupied_Housing_Units_Est * UPSAI_urban * pct_area), 0),
suburban = round((ACS17_Occupied_Housing_Units_Est * UPSAI_suburban * pct_area), 0),
rural = round((ACS17_Occupied_Housing_Units_Est * UPSAI_rural * pct_area), 0)) %>%
group_by(GEOID_PLACE, PLACENAME) %>%
summarise(urban = sum(urban, na.rm = T))
View(temp)
temp <- clipped %>%
left_join(upsai, by = "GEOID_TRACT") %>%
mutate(urban = round((ACS17_Occupied_Housing_Units_Est * UPSAI_urban * pct_area), 0),
suburban = round((ACS17_Occupied_Housing_Units_Est * UPSAI_suburban * pct_area), 0),
rural = round((ACS17_Occupied_Housing_Units_Est * UPSAI_rural * pct_area), 0)) %>%
group_by(GEOID_PLACE, PLACENAME) %>%
summarise(urban = sum(urban, na.rm = T),
suburban = sum(suburban, na.rm = T),
rural = sum(rural, na.rm = T)) %>%
ungroup() %>%
mutate(total = urban + suburban + rural,
pct_urban = urban/total,
pct_suburban = suburban/total,
pct_rural = rural/total)
View(temp)
clipped <- mn_tract %>%
st_intersection(mn_place) %>%
mutate(joined_area = st_area(.)) %>%
st_drop_geometry() %>%
mutate(pct_area = joined_area / tract_area) %>%
drop_units() %>%
mutate(pct_area = round(pct_area, 5)) %>%
rename(GEOID_TRACT = GEOID,
GEOID_PLACE = GEOID.1,
PLACENAME = NAME.1) %>%
select(GEOID_TRACT, GEOID_PLACE, PLACENAME, pct_area)
upsai <- read.csv("C:/Users/dok/Desktop/UPSAI_050820.csv") %>%
rename(GEOID_TRACT = GEOID) %>%
mutate(GEOID_TRACT = as.character(GEOID_TRACT))
temp <- clipped %>%
left_join(upsai, by = "GEOID_TRACT") %>%
mutate(urban = round((ACS17_Occupied_Housing_Units_Est * UPSAI_urban * pct_area), 0),
suburban = round((ACS17_Occupied_Housing_Units_Est * UPSAI_suburban * pct_area), 0),
rural = round((ACS17_Occupied_Housing_Units_Est * UPSAI_rural * pct_area), 0)) %>%
group_by(GEOID_PLACE, PLACENAME) %>%
summarise(urban = sum(urban, na.rm = T),
suburban = sum(suburban, na.rm = T),
rural = sum(rural, na.rm = T)) %>%
ungroup() %>%
mutate(total = urban + suburban + rural,
pct_urban = urban/total,
pct_suburban = suburban/total,
pct_rural = rural/total)
View(temp)
burbsinmn <- temp %>%
filter(pct_suburban > .6) %>%
select(GEOID_PLACE, pct_suburban, PLACENAME) %>%
rename(GEOID = GEOID_PLACE)
mn_place_burbs <- mn_place %>%
left_join(burbsinmn, by = GEOID) %>%
filter(!is.na(PLACENAME))
mn_place_burbs <- mn_place %>%
left_join(burbsinmn, by = "GEOID") %>%
filter(!is.na(PLACENAME))
mapview(mn_place_burbs)
burbsinmn <- temp %>%
filter(pct_suburban > .8) %>%
select(GEOID_PLACE, pct_suburban, PLACENAME) %>%
rename(GEOID = GEOID_PLACE)
mn_place_burbs <- mn_place %>%
left_join(burbsinmn, by = "GEOID") %>%
filter(!is.na(PLACENAME))
mapview(mn_place_burbs)
burbsinmn <- temp %>%
filter(pct_suburban > .7) %>%
select(GEOID_PLACE, pct_suburban, PLACENAME) %>%
rename(GEOID = GEOID_PLACE)
mn_place_burbs <- mn_place %>%
left_join(burbsinmn, by = "GEOID") %>%
filter(!is.na(PLACENAME))
mapview(mn_place_burbs)
mapview(mn_place_burbs, mn_tract)
burbsinmn <- temp %>%
filter(pct_suburban > .6) %>%
select(GEOID_PLACE, pct_suburban, PLACENAME) %>%
rename(GEOID = GEOID_PLACE)
mn_place_burbs <- mn_place %>%
left_join(burbsinmn, by = "GEOID") %>%
filter(!is.na(PLACENAME))
mapview(mn_place_burbs)
us <- unique(fips_codes$state)[1:51]
places <- reduce(
map(us, function(x) {
places(x) %>%
st_as_sf()
}),
rbind
)
future::plan(multiprocess)
places <- reduce(
future_map(us, function(x) {
places(x) %>%
st_as_sf()
}),
rbind
)
tracts <- reduce(
future_map(us, function(x) {
tracts(x) %>%
st_as_sf()
}),
rbind
)
tracts <- reduce(
map(us, function(x) {
tracts(x) %>%
st_as_sf()
}),
rbind
)
